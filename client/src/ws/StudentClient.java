
package ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StudentClient", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StudentClient {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvailableTimeSlot", targetNamespace = "http://ws/", className = "ws.GetAvailableTimeSlot")
    @ResponseWrapper(localName = "getAvailableTimeSlotResponse", targetNamespace = "http://ws/", className = "ws.GetAvailableTimeSlotResponse")
    @Action(input = "http://ws/StudentClient/getAvailableTimeSlotRequest", output = "http://ws/StudentClient/getAvailableTimeSlotResponse")
    public String getAvailableTimeSlot(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookRoom", targetNamespace = "http://ws/", className = "ws.BookRoom")
    @ResponseWrapper(localName = "bookRoomResponse", targetNamespace = "http://ws/", className = "ws.BookRoomResponse")
    @Action(input = "http://ws/StudentClient/bookRoomRequest", output = "http://ws/StudentClient/bookRoomResponse")
    public String bookRoom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cancelBooking", targetNamespace = "http://ws/", className = "ws.CancelBooking")
    @ResponseWrapper(localName = "cancelBookingResponse", targetNamespace = "http://ws/", className = "ws.CancelBookingResponse")
    @Action(input = "http://ws/StudentClient/cancelBookingRequest", output = "http://ws/StudentClient/cancelBookingResponse")
    public String cancelBooking(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "changeReservation", targetNamespace = "http://ws/", className = "ws.ChangeReservation")
    @ResponseWrapper(localName = "changeReservationResponse", targetNamespace = "http://ws/", className = "ws.ChangeReservationResponse")
    @Action(input = "http://ws/StudentClient/changeReservationRequest", output = "http://ws/StudentClient/changeReservationResponse")
    public String changeReservation(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

}
